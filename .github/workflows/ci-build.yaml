# Runs on push to main branch and PRs to main branch
name: CI Build

on:
  push:
    branches: ['main']
    tags-ignore:
      - 'v*.*.*'

  pull_request:
    branches: ['main']

permissions:
  contents: write
  packages: write

jobs:
  lint-check:
    if: ${{ !contains(github.event.head_commit.message, 'Releasing new version') }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js v18
        uses: actions/setup-node@v3
        with:
          node-version: x.18
          cache: 'npm'

      - name: Run lint and check
        run: |
          npm ci
          npm run lint
          npm run check

  build:
    runs-on: ubuntu-latest
    needs: lint-check

    # only run on main branch
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.

      - name: Use Node.js v18
        uses: actions/setup-node@v3
        with:
          node-version: x.18
          registry-url: 'https://npm.pkg.github.com'
          cache: 'npm'

      - name: NPM install & version
        env:
          NODE_ENV: production
        run: |
          npm ci --include=dev
          npm version prerelease --preid=${GITHUB_SHA:0:7} --no-git-tag-version
          git status

      - name: Build all bundles
        env:
          NODE_ENV: production
        run: |
          npm run build-bundle
          npm run build
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add dist-bundle
          git commit -m "github-actions[bot] add dist-bundle"

      - name: Push dist-bundle back to GitHub
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Publish prerelease to Github Packages
        run: |
          npm publish --tag=pre
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
